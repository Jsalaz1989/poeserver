# syntax=docker/dockerfile:1

### BUILD ###

# pull official base image
FROM python:3.10.0-slim-buster AS venv

# grab arg from docker-compose.yml
ARG DJANGO_ENV

# set env vars
ENV DJANGO_ENV=${DJANGO_ENV} \
  # python
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  # pip
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # poetry
  POETRY_VERSION=1.1.11 \
  POETRY_CACHE_DIR='/var/cache/pypoetry'

# set paths
ENV APP_HOME=/home/app/web
ENV VIRTUAL_ENV=$APP_HOME/.venv

# system deps
RUN apt-get update \
  && apt-get install --no-install-recommends -y \
    bash \
    build-essential \
    curl \
    gettext \
    git \
    libpq-dev \
    wget \
  # clean cache
  && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* \
  # install poetry
  && pip install "poetry==$POETRY_VERSION" && poetry --version

# set work directory
WORKDIR $APP_HOME

# copy dependencies
COPY pyproject.toml $APP_HOME
COPY wheels $APP_HOME/wheels

# The `--copies` option tells `venv` to copy libs and binaries instead of using links 
# (which could break since we will extract the virtualenv from this image)
RUN python -m venv --copies $VIRTUAL_ENV
RUN . $VIRTUAL_ENV/bin/activate && poetry install


### PRODUCTION ###

# pull official base image
FROM python:3.10.0-slim-buster as prod

# set paths
ENV APP_HOME=/home/app/web
ENV VIRTUAL_ENV=$APP_HOME/.venv
ENV PATH="$APP_HOME:$VIRTUAL_ENV/bin:$PATH"

# create the app user
RUN adduser --system --group app

# create the appropriate directories
RUN mkdir $APP_HOME               && \
    mkdir $APP_HOME/staticfiles   && \ 
    mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# copy venv from previous stage
COPY --from=venv $VIRTUAL_ENV $VIRTUAL_ENV

# copy project
COPY . $APP_HOME

# install netcat, required for nc command in entrypoint.sh
RUN apt-get update && apt-get install -y netcat

# chown all the files to the app user
RUN chown -R app:app $APP_HOME



# required by Heroku
RUN chmod +x entrypoint.prod.sh && chmod +x deployment-tasks.sh && apt-get install -y curl

# change to the app user
USER app


# run entrypoint.sh
ENTRYPOINT ["entrypoint.prod.sh"]
